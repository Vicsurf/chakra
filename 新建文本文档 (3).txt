#include<reg52.h>
#include"intrins.h"
#define uchar unsigned char
#define uint unsigned int

sbit ZQ=P1^5;
sbit ZH=P1^4;
sbit YQ=P1^2;
sbit YH=P1^1;
sbit ENA=P1^0;
sbit ENB=P1^6;

uchar time1=0,pwm1=0,time2=0,pwm2=0;



void qianjin()
{
   	ZQ=1;
	ZH=0;
	YQ=1;
	YH=0;
	pwm1=20;
	pwm2=20;
}
void zuozhuan1()
{
	ZQ=0;
	ZH=1;
	YQ=1;
	YH=0;
	pwm1=10;
	pwm2=15;

}

 void youzhuan1()
{
	ZQ=1;
	ZH=0;
	YQ=0;
	YH=1;
	pwm1=15;
	pwm2=10;
}




void init()
{
 TMOD=0x01;
 EA=1;
 ET0=1;
 TR0=1;
 TH0=(65535-10)/256;
 TL0=(65535-10)%256;
}

void time0() interrupt 1
{
 time1++;
 if(time1<pwm1)
 	{
	 ENA=1;
	}
 else
 	{
	 ENA=0;
	}
 if(time1>20)
 	{
 	 time1=0;
 	}

 time2++;
 if(time2<pwm2)
 	{
	 ENB=1;
	}
 else
 	{
	 ENB=0;
	}
 if(time2>20)
 	{
 	 time2=0;
 	}

}

void main()
{	init();
qianjin();
}



sbit beep=P3^6;
uchar timer0h,timer0l,time;

code uchar sszymmh[]={6,2,3,5,2,1,3,2,2,5,2,2,1,3,2,6,2,1,5,2,1,
                      6,2,4,3,2,2,5,2,1,6,2,1,5,2,2,3,2,2,1,2,1,
                      6,1,1,5,2,1,3,2,1,2,2,4,2,2,3,3,2,1,5,2,2,
                      5,2,1,6,2,1,3,2,2,2,2,2,1,2,4,5,2,3,3,2,1,
                      2,2,1,1,2,1,6,1,1,1,2,1,5,1,6,0,0,0 
                                      };

code uchar FREQH[]={0xF2,0xF3,0xF5,0xF5,0xF6,0xF7,0xF8, 
                    0xF9,0xF9,0xFA,0xFA,0xFB,0xFB,0xFC,0xFC, //1,2,3,4,5,6,7,8,i
                    0xFC,0xFD,0xFD,0xFD,0xFD,0xFE,
                    0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFF,} ;

code uchar FREQL[]={0x42,0xC1,0x17,0xB6,0xD0,0xD1,0xB6,
                    0x21,0xE1,0x8C,0xD8,0x68,0xE9,0x5B,0x8F, //1,2,3,4,5,6,7,8,i
                    0xEE,0x44, 0x6B,0xB4,0xF4,0x2D, 
                    0x47,0x77,0xA2,0xB6,0xDA,0xFA,0x16,};
void delay(uchar t)	 
{
	uchar t1;
	unsigned long t2;
	for(t1=0;t1<t;t1++)
	{
		for(t2=0;t2<8000;t2++);
	}
	TR0=0;
}
void song()	
{
	TH0=timer0h;
	TL0=timer0l;
	TR0=1;
	delay(time);                       
}


void main(void)
{
	uchar k,i;
	TMOD=1; 
	EA=1;
	ET0=1;
	while(1)
	{
		i=0;  
		while(i<100)		
		{              
			k=sszymmh[i]+7*sszymmh[i+1]-1;
			timer0h=FREQH[k];
			timer0l=FREQL[k];
			time=sszymmh[i+2];
			i=i+3;
			song();
		}
	} 
}
void t0int() interrupt 1	
{
	TR0=0;
	beep=!beep;
	TH0=timer0h;
	TL0=timer0l;
	TR0=1;
}
//世上只有妈妈好

//隔离-----------------------------------

 
unsigned char code table[]={0x3f,0x06,0x5b,0x4f,0x66,
                            0x6d,0x7d,0x07,0x7f,0x6f};			//0-9的码表
					
uint time = 0;
uint timeH = 0;
uint timeL = 0;
uint succeed_flag;
 
 
sbit dula=P2^0;		//段选信号的锁存器控制
sbit wela=P2^1;		//位选信号的锁存器控制
sbit Trig  = P2^2;
sbit Echo  = P3^2;
 
//
void delay(uint z)
{
 uint x,y;
  for(x=z;x>0;x--)
  for(y=125;y>0;y--);
}
//
void delay_20us()
 { 
    uchar a ;
    for(a=0;a<100;a++);
 }
//***************************************************************
//显示数据转换程序
void display(uint temp) 
 { 
    uchar qian,ge,shi,bai;
	qian = temp/1000;
    bai=temp/100%10;
    shi=temp%100/10;  
    ge=temp%10;
	wela=1;
    //P0=0xf7;
	P0 = 0xfe;
    wela=0;
    dula=1;
    P0=table[qian];
    dula=0;
    delay(5);  
    wela=1;
    //P0=0xf7;
	P0 = 0xfd;
    wela=0;
    dula=1;
    P0=table[bai];
    dula=0;
    delay(5);
    dula=1;
    P0=0x00;   //关位码
    dula=0;
    wela=1;
    //P0=0xef;
	P0 = 0xfb;
    wela=0;
    dula=1;
    P0=table[shi];
    dula=0;
    delay(5);
    dula=1;
    P0=0x00;   //关位码
    dula=0;
 
    dula=1;
    P0=table[ge];
    dula=0;
    wela=1;
    //P0=0xdf;
	P0 = 0xf7;
    wela=0;
    delay(5);
    dula=1;
    P0=0x00;   //关位码
    dula=0;
 }
//***************************************************************
void main()  
{ 
    uint distance;
 
    uint test =0;
    Trig=0;       //首先拉低脉冲输入引脚
    EA=1;         //打开总中断0 
    TMOD=0x10;    //定时器1，16位工作方式 
    while(1)        
    {
        EA=0;           //关总中断
        Trig=1;         //超声波输入端
        delay_20us();   //延时20us
        Trig=0;         //产生一个20us的脉冲
        while(Echo==0); //等待Echo回波引脚变高电平
        succeed_flag=0; //清测量成功标志
        EA=1; 
        EX0=1;          //打开外部中断0
        TH1=0;          //定时器1清零
        TL1=0;          //定时器1清零
        TF1=0;          //计数溢出标志
        TR1=1;          //启动定时器1
        delay(20);      //等待测量的结果
        TR1=0;          //关闭定时器1
        EX0=0;          //关闭外部中断0
       if(succeed_flag==1)
       {   
          time=timeH*256+timeL;
          distance=time*0.172;  //厘米
          display(distance);
       }                         
      if(succeed_flag==0)
       {
          distance=0;                    //没有回波则清零
          test = !test;                  //测试灯变化
        }               
    }
}
//***************************************************************
//外部中断0，用做判断回波电平
void exter()  interrupt 0   // 外部中断0是0号
 {   
     timeH =TH1;    //取出定时器的值
     timeL =TL1;    //取出定时器的值
     succeed_flag=1;//至成功测量的标志
     EX0=0;         //关闭外部中断
 }
//****************************************************************
//定时器1中断,用做超声波测距计时
void timer1() interrupt 3  //
    {
         TH1=0;
         TL1=0;
     }